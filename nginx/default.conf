# Define upstream server pool for load balancing
# Benefits: Enables load balancing across multiple Django instances if needed
upstream booktrader {
	server booktrader:8000;
}

server {
	listen 80;

	# Allow larger file uploads (book covers, documents, etc.)
	# Default is 1MB, this allows up to 20MB uploads
	# Benefits: Users can upload high-quality book covers and documents
	client_max_body_size 20M;

	# Enable gzip compression for text-based content
	# Benefits: Reduces bandwidth usage by ~70%, faster page loads on slow connections
	# Especially important for mobile users and API responses
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	# Serve static files (CSS, JS, images) directly through nginx
	# Benefits: 10-20x faster than serving through Django, reduces server load
	# Files are cached for 1 year since they have unique names when changed
	location /static/ {
		alias /static/;
		expires 1y;                                    # Cache for 1 year
		add_header Cache-Control "public, immutable";  # Tell browsers file never changes
	}

	# Serve user-uploaded media files (book covers, user avatars) directly
	# Benefits: Fast image serving, reduces Django load, improves book browsing performance
	location /media/ {
		alias /media/;
		expires 1y;                           # Cache for 1 year
		add_header Cache-Control "public";    # Cacheable but not immutable
	}

	# Handle API requests with proper headers
	# Benefits: Compressed JSON responses, proper client IP tracking
	location /api/ {
		proxy_pass http://booktrader;

		# Forward original host header so Django knows the domain name
		# Important for: ALLOWED_HOSTS, CSRF protection, absolute URLs
		proxy_set_header Host $host;

		# Forward real client IP address (not nginx's internal IP)
		# Important for: user analytics, rate limiting, security logging
		proxy_set_header X-Real-IP $remote_addr;

		# Forward full chain of proxy IPs for audit trails
		# Important for: security monitoring, CDN integration
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# Forward original protocol (HTTP/HTTPS) to Django
		# Important for: SECURE_SSL_REDIRECT, proper URL generation
		proxy_set_header X-Forwarded-Proto $scheme;

		# Set reasonable timeouts to prevent hanging connections
		# Benefits: Protects against slow loris attacks, frees up resources
		proxy_connect_timeout 60s;  # Time to connect to Django
		proxy_send_timeout 60s;     # Time to send request to Django
		proxy_read_timeout 60s;     # Time to read response from Django
	}

	# Proxy all other requests to Django application
	# Benefits: Proper header forwarding for security, logging, and Django functionality
	location / {
		proxy_pass http://booktrader;

		# Forward original host header so Django knows the domain name
		proxy_set_header Host $host;

		# Forward real client IP address (not nginx's internal IP)
		proxy_set_header X-Real-IP $remote_addr;

		# Forward full chain of proxy IPs for audit trails
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# Forward original protocol (HTTP/HTTPS) to Django
		proxy_set_header X-Forwarded-Proto $scheme;

		# Set reasonable timeouts to prevent hanging connections
		proxy_connect_timeout 60s;  # Time to connect to Django
		proxy_send_timeout 60s;     # Time to send request to Django
		proxy_read_timeout 60s;     # Time to read response from Django
	}
}
