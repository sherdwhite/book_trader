{
	"name": "BookTrader",
	"dockerComposeFile": [
		"docker-compose.yml"
	],
	"service": "booktrader",
	"workspaceFolder": "/workspace",

	// Persist VS Code extensions across rebuilds
	"mounts": [
		"source=booktrader-vscode-extensions,target=/root/.vscode-server/extensions,type=volume"
	],

	"features": {
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/github-cli:1": {}
	},

	// Use port 5433 for PostgreSQL instead of default 5432 to avoid conflicts
	// with the main docker-compose.yml setup, allowing both to run simultaneously
	"forwardPorts": [8000, 5433],
	"portsAttributes": {
		"8000": {
			"label": "Django Dev Server",
			"onAutoForward": "notify"
		},
		"5433": {
			"label": "PostgreSQL"
		}
	},

	// Commands to run after the container is created
	"postCreateCommand": "pip install -r /workspace/booktrader/requirements.txt && cd /workspace/booktrader && python manage.py migrate && python manage.py collectstatic --noinput --clear",

	"customizations": {
		"vscode": {
			"settings": {
				// Modern Python settings
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": false,
				"python.linting.flake8Enabled": true,
				"python.linting.flake8Args": [
					"--ignore=E501",
					"--exclude=venv,migrations,__pycache__,static"
				],
				"python.languageServer": "Pylance",
				"python.terminal.activateEnvironment": true,
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,
				"python.testing.pytestArgs": [
					"--no-header",
					"--tb=short",
					"-v"
				],

				// Pylance performance settings
				"python.analysis.autoImportCompletions": true,
				"python.analysis.autoSearchPaths": true,
				"python.analysis.diagnosticMode": "workspace",
				"python.analysis.typeCheckingMode": "basic",

				// File watching exclusions for performance
				"files.watcherExclude": {
					"**/__pycache__/**": true,
					"**/.git/**": true,
					"**/*.pyc": true,
					"**/*.pyo": true
				},

				// Search exclusions
				"search.exclude": {
					"**/__pycache__": true,
					"**/*.pyc": true,
					"**/*.pyo": true,
					"**/*.optimized": true,
					"**/.env.example": true
				},

				// File formatting
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.organizeImports": "explicit",
						"source.fixAll": "explicit"
					}
				},

				// Editor settings
				"editor.formatOnSave": true,
				"editor.rulers": [99],
				"editor.wordWrap": "wordWrapColumn",
				"editor.wordWrapColumn": 99,
				"files.trimTrailingWhitespace": true,
				"files.insertFinalNewline": true,

				// Django specific
				"emmet.includeLanguages": {
					"django-html": "html"
				},
				"files.associations": {
					"*.html": "django-html"
				}
			},
			"extensions": [
				"ms-python.python",
				"ms-python.debugpy",
				"ms-python.black-formatter",
				"ms-python.isort",
				"batisteo.vscode-django",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker",
				"ms-vscode.vscode-json"
			]
		}
	},

	"remoteUser": "root"
}
